
wait方法和notify方法都是Object类中的
1. wait()
   使得当前线程立刻停止运行，处于等待状态，并将当前线程置入锁对象的等待队列中，直到被通知（notify()）或被中断为止。
   使用条件：只能在同步方法或者同步代码块中使用，必须是内建锁
   wait方法调用后立即释放锁。
   public final void wait() throws InterruptedException:一直等，直到被唤醒或者中断
   public final native void wait(long timeout)throws InterruptedException:超时等待，若在规定时间内未被唤醒，则线程退出。
   public final void wait(long timeout,int nanos) throws InterruptedException:相比于上面的增加了纳秒控制

2. notify()
   唤醒处于等待状态的线程
   使用条件：notify()也必须在同步代码块和同步方法中使用，用来唤醒等待该对象的其他线程，
   如果有多个线程在等待，随机挑选一个唤醒。（由JDK版本决定，1.8选择默认队列的第一个）
   notify方法调用后，当前线程不会立即释放对象锁，要等到当前线程执行完毕后再释放锁。
3. notifyAll()
   唤醒所有处于等待状态的线程
4. 线程由运行态->阻塞（wait）
   1）调用sleep(),立刻交出CPU，不释放锁
   2）线程调用阻塞式IO（BIO）方法
   3）线程获取锁失败进入阻塞状态
   4）线程调用wait方法
   5）线程调用suspend(),将线程挂起（容易死锁，废弃）
   每个锁对象都有两个队列。一个称为同步队列，存储获取锁失败的线程。另一个称为等待队列，存储调用wait()等待的线程。
   将线程唤醒实际上是将处于等待队列的线程一道同步队列中竞争锁。
生产--消费者模型
   商品类、生产类、消费类
