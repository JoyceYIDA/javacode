深浅拷贝（对象）
protected native Object clone() throws CloneNotSupportedException
要想让对象具有拷贝功能，必须实现Cloneable接口（标识接口，表示此类允许被拷贝；和Serializable一样）
并且在类中自定义clone调用Object类提供的继承权限clone方法。

只有子类实现了Cloneable接口后才可以使用Object类提供的clone方法。否则抛出CloneNotSupportedException。

浅拷贝：对象值拷贝，不会产生新的引用对象，拷贝出来的对象仍然保留原对象的所有引用。
问题：任意一个拷贝对象（或原对象）中的引用发生改变，所有对象均会受到影响。

深拷贝：拷贝出来的对象产生所有引用的新的对象。
特点：修改任意一个对象，不会对其他对象产生影响。
深拷贝的实现：1.包含的其他类继续实现Cloneable接口，并且调用clone方法。
2.使用序列化,要想让类支持序列化，必须实现Serializable接口作为标识接口。
使用序列化进行深拷贝时，不需要实现Cloneable接口，只需要实现Serializable接口
具体实现序列化与反序列化，需要使用io包中提供的两个处理类：
ObjectOutputStream（序列化类）writeObject（Object obj）：将obj变为二进制输出流输出到目标终端
ObjectInputStream（反序列化类）
transient关键字：若希望类中的若干属性不被序列化，可以在属性前添加transient关键字。

延迟拷贝：深拷贝+浅拷贝

Scanner类默认碰到空格、换行、制表符都是分隔符hasNextXXX()
nextXXX()
自定义分隔符：useDelimter()
无论如何定义分隔符，enter键表示本次输入完毕。





















