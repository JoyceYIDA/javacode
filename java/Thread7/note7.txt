内置四大线程池
1.固定大小线程池FixedThreadPool
  return new ThreadPoolExecutor(nThreads, nThreads,
                                      0L, TimeUnit.MILLISECONDS,
                                      new LinkedBlockingQueue<Runnable>());

  适用于为了满足资源管理需求，而需要限制当前线程数量的应用。适用于负载较重的服务器。
2.单线程池 SingleThreadPool
  return new FinalizableDelegatedExecutorService
            (new ThreadPoolExecutor(1, 1,
                                    0L, TimeUnit.MILLISECONDS,
                                    new LinkedBlockingQueue<Runnable>()));
  适用于需要保证顺序执行各个任务；并且在任意时间，不会有多个线程。
3.缓存线程池 CachedThreadPool根据需要创建新线程。
  return new ThreadPoolExecutor(0, Integer.MAX_VALUE,
                                       60L, TimeUnit.SECONDS,
                                      new SynchronousQueue<Runnable>());
  当提交任务速度快于执行任务速度，缓存线程池会不断创建新线程。
  大小无界线程池，是用于执行很多短期异步的小程序，或者负载较轻的服务器。
4.定时调度池
  用ScheduledExecutorService来new
  使用定时调度池只能用Runnable来实现





